已经将用户输入字符全部更改为大写！
得到关系模式：
表格属性: ( A B C D E )
函数依赖:
		A->B
		C->EC
		D->B

函数依赖集合的正则覆盖为: A->B; C->E; D->B
当前关系模式的候选码为: ACD

检查正则覆盖中函数依赖: ...

1: A -> B
左侧属性 A 的闭包为: AB
检查函数依赖平凡性: 该函数依赖是非平凡的。
函数依赖左侧属性: A 不是原表格的超键...
函数依赖 RHS ―― LHS = B 没有出现在候选码中...
该函数依赖破坏第三范式

2: C -> E
左侧属性 C 的闭包为: CE
检查函数依赖平凡性: 该函数依赖是非平凡的。
函数依赖左侧属性: C 不是原表格的超键...
函数依赖 RHS ―― LHS = E 没有出现在候选码中...
该函数依赖破坏第三范式

3: D -> B
左侧属性 D 的闭包为: BD
检查函数依赖平凡性: 该函数依赖是非平凡的。
函数依赖左侧属性: D 不是原表格的超键...
函数依赖 RHS ―― LHS = B 没有出现在候选码中...
该函数依赖破坏第三范式


创建子表: {'B', 'A'} (为了保存函数依赖: A->B)
创建子表: {'E', 'C'} (为了保存函数依赖: C->E)
创建子表: {'D', 'B'} (为了保存函数依赖: D->B)
由于现已分解的所有子表中没有包含任何原表格的候选码，为了确保分解后的关系仍然能够保持数据的完整性和一致性，并能够准确地标识和区分每个元组，我们将原表格任一候选码作为一个子表
创建子表: {'D', 'C', 'A'}
分解子表 1: AB
分解子表 2: CE
分解子表 3: BD
分解子表 4: ACD


分解已完成。
